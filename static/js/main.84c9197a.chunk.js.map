{"version":3,"sources":["lib/components/materialImage.js","lib/components/calendarTop.js","lib/components/calendarBottom.js","lib/components/calendarItem.js","lib/components/calendar.js","lib/components/characterTracker.js","lib/components/transformerChanger.js","lib/components/sidebarItem.js","lib/components/sidebar.js","lib/components/stateManager.js","App.js","reportWebVitals.js","index.js"],"names":["MaterialImage","material","highMaterialName","name","this","convertURISafe","input","escape","replace","split","join","props","className","src","createMaterialImage","alt","React","Component","calendarTop","type","genshin","talentmaterialtypes","weaponmaterialtypes","Error","day","createMaterialImages","queryHandler","materialImages","getQueryHandler","matchCategories","forEach","materialName","push","CalendarBottom","createTransformerImage","config","transformerDay","createCharacterImage","dayCharacters2D","map","dayCharacters","concat","characters","trackedCharacters","characterName","includes","character","images","icon","CalendarItem","userConfig","Calendar","generateCalendarItems","days","calendarItems","displayOrder","CharacterTracker","toggleCharacterTracking","newConfig","stateManager","getUserConfig","removeFromArray","updateUserConfig","generateCharacterItems","characterNames","outputCharacters","isTracked","onClick","array","remove","splice","indexOf","TransformerChanger","generateTransformerDayItems","calendarDays","outputDays","isSelected","SidebarItem","text","handler","Sidebar","generateCodeItems","codes","outputCodes","code","checkInURL","codesURL","webEventURL","buildsURL","window","open","StateManager","defaultState","loadUserConfig","storedUserConfig","JSON","parse","localStorage","getItem","useState","setUserConfigState","useEffect","setItem","stringify","newValue","updatedUserConfig","App","currentDay","Date","getDay","slice","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84c9197a.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class MaterialImage extends React.Component {\n    createMaterialImage (material) {\n        let highMaterialName = material['5starname'] || material['4starname'] ;\n\n        if (!highMaterialName) {\n            highMaterialName = material.name;\n        }\n\n        return `img/items/Item_${this.convertURISafe(highMaterialName)}.png`;\n    }\n    convertURISafe (input) {\n        return escape(input.replace(/[\"']/g, '').split(' ').join('_'));\n    }\n\n    render () {\n        let material = this.props.material;\n\n        return <div className='MaterialImage'>\n            <img src={this.createMaterialImage(material)} alt={material.name} />\n        </div>\n    }\n}","import React from 'react';\nimport MaterialImage from \"./materialImage\";\nimport genshin from \"genshin-db\";\n\nexport default class calendarTop extends React.Component {\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'weapon':\n                return genshin.weaponmaterialtypes;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    render () {\n        let day = this.props.day;\n\n        let createMaterialImages = (type) => {\n            let queryHandler,\n                materialNames,\n                materialImages = [];\n\n            queryHandler = this.getQueryHandler(type);\n            materialNames = queryHandler(day, {matchCategories: true});\n\n            materialNames.forEach(materialName => {\n                let material = queryHandler(materialName);\n                materialImages.push(<MaterialImage material={material} key={material.name} />)\n            });\n\n            return materialImages;\n        }\n\n        return <div className={[\"CalendarTop\", day].join(' ')}>\n            <div className=\"day\">{day}</div>\n            <div className=\"container\">\n                { createMaterialImages('talent') }\n            </div>\n            <div className=\"container\">\n                { createMaterialImages('weapon') }\n            </div>\n        </div>;\n    }\n}","import React from 'react';\nimport MaterialImage from \"./materialImage\";\nimport genshin from \"genshin-db\";\n\nexport default class CalendarBottom extends React.Component {\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'character':\n                return genshin.characters;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    createTransformerImage = () => {\n        let {day, config} = this.props;\n        if (day === config.transformerDay) {\n            return <MaterialImage material={{name: 'Parametric Transformer'}} />;\n        }\n    }\n\n    createCharacterImage = () => {\n        let {day, config} = this.props,\n        dayMaterials = this.getQueryHandler('talent')(day, {matchCategories: true}),\n        dayCharacters2D = dayMaterials.map(\n            material => this.getQueryHandler('character')(material, {matchCategories: true})\n        ),\n        dayCharacters = [].concat(...dayCharacters2D),\n        characters = [];\n\n        config.trackedCharacters.forEach(characterName => {\n            if (dayCharacters.includes(characterName)) {\n                let character = this.getQueryHandler('character')(characterName);\n\n                characters.push(\n                    <div className='CharacterIcon' key={`calBotCharIcon${characterName}`}>\n                        <img src={character.images.icon} alt={characterName}/>\n                    </div>\n                    );\n            }\n        });\n\n        return characters;\n    }\n\n    render() {\n        return (\n            <div className=\"CalendarBottom\">\n                {this.createTransformerImage()}\n                {this.createCharacterImage()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport CalendarTop from \"./calendarTop\";\nimport CalendarBottom from \"./calendarBottom\";\n\nexport default class CalendarItem extends React.Component {\n    render () {\n        let {day, userConfig} = this.props;\n\n        return (\n            <div className=\"CalendarItem\">\n                <div className=\"frame\"> </div>\n                <CalendarTop day={day} />\n                <CalendarBottom day={day} config={userConfig} />\n            </div>\n        );\n    };\n}","import React from 'react';\nimport CalendarItem from \"./calendarItem\";\n\nexport default class Calendar extends React.Component {\n    generateCalendarItems = (days, userConfig) => {\n        let calendarItems = [];\n        days.forEach(day => {\n            calendarItems.push(<CalendarItem day={day} userConfig={userConfig} key={day}/>)\n        });\n        return calendarItems;\n    }\n\n    render () {\n        let {displayOrder, userConfig} = this.props;\n\n        return (<div className=\"Calendar\">\n            {this.generateCalendarItems(displayOrder, userConfig)}\n        </div>);\n    }\n}","import React from 'react';\nimport genshin from \"genshin-db\";\n\nexport default class CharacterTracker extends React.Component {\n    removeFromArray (array, remove) {\n        array.splice(array.indexOf(remove), 1);\n    }\n\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'character':\n                return genshin.characters;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    toggleCharacterTracking = characterName => {\n        let stateManager = this.props.stateManager,\n            { trackedCharacters } = stateManager.getUserConfig(),\n            newConfig;\n\n        if (trackedCharacters.includes(characterName)) {\n            newConfig = [...trackedCharacters];\n            this.removeFromArray(newConfig, characterName);\n        } else {\n            newConfig = [...trackedCharacters, characterName];\n        }\n\n        stateManager.updateUserConfig({trackedCharacters : newConfig});\n    }\n\n    generateCharacterItems = characterNames => {\n        let outputCharacters = [];\n        let { trackedCharacters } = this.props.stateManager.getUserConfig();\n\n        characterNames.forEach(characterName => {\n            let isTracked = trackedCharacters.includes(characterName);\n\n            outputCharacters.push(\n                <div\n                    className={`characterTracker ${isTracked && 'selected'}`}\n                    onClick={ () => { this.toggleCharacterTracking(characterName); } }\n                    key = {characterName}\n                >\n                    {isTracked && <div className='primogem'/> }\n                    {characterName}\n                </div>\n            );\n        });\n\n        return outputCharacters;\n    }\n\n    render () {\n        let characterNames = this.getQueryHandler('character')('names', {matchCategories: true});\n        this.removeFromArray(characterNames, 'Aether');\n        this.removeFromArray(characterNames, 'Lumine');\n\n        return (\n            <>\n                <div className='topLevel'>\n                    Character tracker\n                </div>\n                <div className='subLevel'>\n                    {this.generateCharacterItems(characterNames)}\n                </div>\n            </>\n        );\n    }\n}","import React from \"react\";\n\nexport default class TransformerChanger extends React.Component {\n    generateTransformerDayItems = () => {\n        let {calendarDays, stateManager} = this.props;\n        let outputDays = [];\n        let {transformerDay} = stateManager.getUserConfig();\n\n        calendarDays.forEach(day => {\n            let isSelected = transformerDay === day;\n            outputDays.push(\n                <div className={`transformerDay ${isSelected && 'selected'}`}\n                     onClick={() => stateManager.updateUserConfig({transformerDay: day})}\n                     key={`transformer${day}`}\n                >\n                    {isSelected && <div className='primogem'/> }\n                    {day}\n                </div>)\n        });\n        return outputDays;\n    }\n\n    render() {\n        return (\n            <>\n                <div className='topLevel'>\n                    Set Transformer\n                </div>\n                <div className='subLevel'>\n                    {this.generateTransformerDayItems()}\n                </div>\n            </>\n        );\n    }\n}","import React from 'react';\n\nexport default class SidebarItem extends React.Component {\n\n    render () {\n        let {text, handler} = this.props;\n        return <div className='topLevel'\n                    onClick={handler}\n                >\n                    {text}\n                </div>;\n    }\n}","import React from 'react';\nimport codes from \"../data/codes.json\";\nimport CharacterTracker from \"./characterTracker\";\nimport TransformerChanger from \"./transformerChanger\";\nimport SidebarItem from \"./sidebarItem\";\n\nexport default class Sidebar extends React.Component {\n    generateCodeItems = codes => {\n        let outputCodes = [];\n\n        codes.forEach(code => {\n            outputCodes.push(\n                <div className='code'\n                     key={code}\n                >\n                    {code}\n                </div>\n            );\n        })\n\n        return outputCodes;\n    }\n\n    render() {\n        let {calendarDays, checkInURL, codesURL, webEventURL, buildsURL} = this.props.config;\n        let {stateManager} = this.props;\n\n        return (\n        <div className=\"Sidebar\">\n            <SidebarItem text={'Check In'} handler={() => {window.open(checkInURL);}} />\n            <SidebarItem text={'Web Event'} handler={() => {window.open(webEventURL);}} />\n            <SidebarItem text={'Codes'} handler={() => {window.open(codesURL);}} />\n            <div className='subLevel'>\n                {this.generateCodeItems(codes)}\n            </div>\n\n            <div className='divider'> </div>\n\n            <TransformerChanger stateManager={stateManager} calendarDays={calendarDays} />\n            <CharacterTracker stateManager={stateManager} />\n\n            <div className='divider'> </div>\n\n            <SidebarItem text={'Build'} handler={() => {window.open(buildsURL);}}/>\n            <SidebarItem text={'Calculator'} />\n        </div>\n        );\n    }\n}","import { useState, useEffect } from 'react';\nimport config from '../data/config.json';\n\nexport default function StateManager() {\n    let { defaultState } = config;\n\n    let getUserConfig = () => userConfig;\n\n    let setSavedUserConfig = (config) => {\n        localStorage.setItem('config', JSON.stringify(config));\n    }\n\n    let updateUserConfig = (newValue) => {\n        let updatedUserConfig = {...userConfig, ...newValue};\n        setUserConfigState(updatedUserConfig);\n    }\n\n    let getSavedUserConfig = () => {\n        return JSON.parse(localStorage.getItem('config'));\n    }\n\n    let loadUserConfig = () => {\n        let storedUserConfig = getSavedUserConfig();\n\n        if (storedUserConfig) {\n            return storedUserConfig;\n        } else {\n            return defaultState;\n        }\n    }\n\n    const [userConfig, setUserConfigState] = useState(loadUserConfig());\n\n    useEffect(() => {\n        setSavedUserConfig(userConfig);\n    }, [userConfig]);\n\n    return {\n        getUserConfig,\n        loadUserConfig,\n        updateUserConfig\n    }\n}","import React from 'react';\nimport Calendar from \"./lib/components/calendar\";\nimport Sidebar from \"./lib/components/sidebar\";\nimport StateManager from \"./lib/components/stateManager\";\nimport config from './lib/data/config.json';\n\nimport './lib/css/App.css';\nimport './lib/css/days.css';\n\n\nexport default function App () {\n    let {calendarDays} = config,\n        currentDay = (new Date()).getDay(),\n        displayOrder = calendarDays.slice(currentDay, calendarDays.length).concat(calendarDays.slice(0, currentDay));\n\n    let stateManager = StateManager();\n\n    let userConfig = stateManager.getUserConfig();\n\n    return (\n        <div className=\"App\">\n            <Calendar displayOrder={displayOrder} userConfig={userConfig} />\n            <Sidebar userConfig={userConfig} config={config} stateManager={stateManager}/>\n        </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}