{"version":3,"sources":["lib/components/entityImage.js","lib/components/materialImage.js","lib/components/calendarTop.js","lib/components/calendarBottom.js","lib/components/calendarItem.js","lib/components/calendar.js","lib/components/sidebarMenu.js","lib/components/characterTracker.js","lib/components/transformerChanger.js","lib/components/sidebarItem.js","lib/components/sidebar.js","lib/components/stateManager.js","App.js","reportWebVitals.js","index.js"],"names":["EntityImage","input","escape","replace","split","join","imageSrc","classNames","entityName","classNameString","Array","isArray","className","src","alt","this","props","createEntityImage","React","Component","MaterialImage","material","highMaterialName","name","convertURISafe","createMaterialURL","calendarTop","createResetInfo","day","config","resetDay","type","genshin","talentmaterialtypes","weaponmaterialtypes","Error","createMaterialImages","queryHandler","getQueryHandler","materialNames","matchCategories","materialImages","forEach","materialName","push","CalendarBottom","createTransformerImage","userConfig","transformerDay","createSpiralAbyssImage","date","spiralAbyssResetDays","calendarDate","getDate","includes","createCharacterImage","dayCharacters2D","map","dayCharacters","concat","characters","trackedCharacters","characterName","character","images","icon","CalendarItem","calendarDays","getDay","Calendar","generateCalendarItems","displayOrder","calendarItems","sidebarMenu","toggleOpen","setState","state","showSubLevel","createMenu","topLevelText","subLevelItems","subLevelContent","onClick","CharacterTracker","toggleCharacterTracking","newConfig","stateManager","getUserConfig","removeFromArray","updateUserConfig","generateCharacterItems","characterNames","outputCharacters","isTracked","array","remove","splice","indexOf","TransformerChanger","createTransformerDayItems","outputDays","isSelected","SidebarItem","text","handler","Sidebar","generateCodeItems","codes","outputCodes","code","checkInURL","codesURL","webEventURL","buildsURL","window","open","StateManager","defaultState","loadUserConfig","storedUserConfig","JSON","parse","localStorage","getItem","useState","setUserConfigState","useEffect","setItem","stringify","newValue","updatedUserConfig","App","addDays","startDate","days","Date","valueOf","setDate","currentDay","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAEqBA,E,oKAEjB,SAAgBC,GACZ,OAAOC,OAAOD,EAAME,QAAQ,QAAS,IAAIC,MAAM,KAAKC,KAAK,Q,+BAG7D,SAAmBC,EAAUC,EAAYC,GACrC,IAAMC,EAAkBC,MAAMC,QAAQJ,GAAcA,EAAWF,KAAK,KAAOE,EAE3E,OAAQ,qBAAKK,UAAWH,EAAhB,SACJ,qBAAKI,IAAKP,EAAUQ,IAAKN,Q,oBAIjC,WAAU,IAAD,EACsCO,KAAKC,MAAzCV,EADF,EACEA,SAAUC,EADZ,EACYA,WAAYC,EADxB,EACwBA,WAE7B,OAAOO,KAAKE,kBAAkBX,EAAUC,EAAYC,O,GAjBnBU,IAAMC,WCA1BC,E,uKACjB,SAAmBC,GACf,IAAIC,EAAmBD,EAAS,cAAgBA,EAAS,aAMzD,OAJKC,IACDA,EAAmBD,EAASE,MAG1B,kBAAN,OAAyBR,KAAKS,eAAeF,GAA7C,U,oBAGJ,WAAW,IACCD,EAAaN,KAAKC,MAAlBK,SAER,OAAON,KAAKE,kBACRF,KAAKU,kBAAkBJ,GACvB,gBACAA,EAASE,U,GAjBsBvB,G,gBCEtB0B,E,4MAYjBC,gBAAkB,WAAO,IAAD,EACmB,EAAKX,MAE5C,GAHoB,EACZY,MADY,EACPC,OAAWC,SAGpB,OACI,qBAAKlB,UAAU,QAAf,yB,qDAhBZ,SAAiBmB,GACb,OAAQA,GACJ,IAAK,SACD,OAAOC,IAAQC,oBACnB,IAAK,SACD,OAAOD,IAAQE,oBACnB,QACI,MAAO,IAAIC,MAAM,yC,oBAiB7B,WAAW,IAAD,OACEP,EAAQb,KAAKC,MAAbY,IAEFQ,EAAuB,SAACL,GAC1B,IAAMM,EAAe,EAAKC,gBAAgBP,GACtCQ,EAAgBF,EAAaT,EAAK,CAACY,iBAAiB,IACpDC,EAAiB,GAOrB,OALAF,EAAcG,SAAQ,SAAAC,GAClB,IAAMtB,EAAWgB,EAAaM,GAC9BF,EAAeG,KAAK,cAAC,EAAD,CAAevB,SAAUA,GAAeA,EAASE,UAGlEkB,GAGX,OAAO,sBAAK7B,UAAU,cAAf,UACH,qBAAKA,UAAU,MAAf,SAAsBgB,IACtB,qBAAKhB,UAAU,YAAf,SACMwB,EAAqB,YAE3B,qBAAKxB,UAAU,YAAf,SACMwB,EAAqB,YAE1BrB,KAAKY,yB,GAjDuBT,IAAMC,W,OCC1B0B,E,4MAYjBC,uBAAyB,WAAO,IAAD,EACD,EAAK9B,MAC/B,GAF2B,EACpBY,MADoB,EACfmB,WACWC,eACnB,OAAO,cAAC,EAAD,CAAe3B,SAAU,CAACE,KAAM,6B,EAI/C0B,uBAAyB,WAAO,IAAD,EACuB,EAAKjC,MAAhDkC,EADoB,EACpBA,KAAiBC,EADG,EACdtB,OAAWsB,qBACpBC,EAAeF,EAAKG,UAExB,GAAIF,EAAqBG,SAASF,GAC9B,OAAO,cAAC,EAAD,CAAa9C,SAAS,+BACTC,WAAW,cACXC,WAAW,iB,EAKvC+C,qBAAuB,WAAO,IAAD,IACC,EAAKvC,MAAxBY,EADkB,EAClBA,IAAKmB,EADa,EACbA,WAEZS,EADe,EAAKlB,gBAAgB,SAArB,CAA+BV,EAAK,CAACY,iBAAiB,IACtCiB,KACP,SAAApC,GAAQ,OAAI,EAAKiB,gBAAgB,YAArB,CAAkCjB,EAAU,CAACmB,iBAAiB,OAElGkB,GAAgB,MAAGC,OAAH,oBAAaH,IACzBI,EAAa,GAcjB,OAZAb,EAAWc,kBAAkBnB,SAAQ,SAAAoB,GACjC,GAAIJ,EAAcJ,SAASQ,GAAgB,CACvC,IAAIC,EAAY,EAAKzB,gBAAgB,YAArB,CAAkCwB,GAElDF,EAAWhB,KACP,qBAAKhC,UAAU,gBAAf,SACI,qBAAKC,IAAKkD,EAAUC,OAAOC,KAAMnD,IAAKgD,KAD1C,wBAAqDA,SAO1DF,G,qDAnDX,SAAiB7B,GACb,OAAQA,GACJ,IAAK,SACD,OAAOC,IAAQC,oBACnB,IAAK,YACD,OAAOD,IAAQ4B,WACnB,QACI,MAAO,IAAIzB,MAAM,yC,oBA+C7B,WACI,OACI,sBAAKvB,UAAU,iBAAf,UACKG,KAAK+B,yBACL/B,KAAKkC,yBACLlC,KAAKwC,8B,GA5DsBrC,IAAMC,WCD7B+C,E,4JACjB,WAAW,IAAD,EAC6BnD,KAAKC,MAAjCkC,EADD,EACCA,KAAMrB,EADP,EACOA,OAAQkB,EADf,EACeA,WACfnB,EAAMC,EAAOsC,aAAajB,EAAKkB,UAGrC,OACI,sBAAKxD,UAAW,CAAC,eAAgBgB,GAAKvB,KAAK,KAA3C,UACI,qBAAKO,UAAU,QAAf,eACA,cAAC,EAAD,CAAagB,IAAKA,EAAKC,OAAQA,IAC/B,cAAC,EAAD,CAAgBD,IAAKA,EAAKsB,KAAMA,EAAMrB,OAAQA,EAAQkB,WAAYA,W,GAVxC7B,IAAMC,WCD3BkD,E,4MACjBC,sBAAwB,WAAO,IAAD,EACiB,EAAKtD,MAAzCuD,EADmB,EACnBA,aAAc1C,EADK,EACLA,OAAQkB,EADH,EACGA,WAEzByB,EAAgB,GAIpB,OAHAD,EAAa7B,SAAQ,SAAAQ,GACjBsB,EAAc5B,KAAK,cAAC,EAAD,CAAcM,KAAMA,EAAMrB,OAAQA,EAAQkB,WAAYA,GAAiBG,EAAKkB,cAE5FI,G,4CAGX,WACI,OAAQ,qBAAK5D,UAAU,WAAf,SACHG,KAAKuD,8B,GAboBpD,IAAMC,W,QCDvBsD,E,kDACjB,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IAKV0D,WAAa,WACT,EAAKC,SAAS,CAAC,cAAkB,EAAKC,MAAMC,gBAP7B,EAUnBC,WAAa,SAACC,EAAcC,GACxB,IAAMC,EAAkB,EAAKL,MAAMC,cAC/B,qBAAKjE,UAAU,WAAf,SACMoE,IAGV,OACI,qCACI,qBAAKpE,UAAU,WAAWsE,QAAU,EAAKR,WAAzC,SACMK,IAEJE,MAlBV,EAAKL,MAAQ,CAAE,cAAiB,GAHjB,E,UADkB1D,IAAMC,WCC1BgE,E,4MAgBjBC,wBAA0B,SAAAtB,GAChB,IAEFuB,EAFEC,EAAe,EAAKtE,MAAMsE,aAC1BzB,EAAsByB,EAAaC,gBAAnC1B,kBAGFA,EAAkBP,SAASQ,IAC3BuB,EAAS,YAAOxB,GAChB,EAAK2B,gBAAgBH,EAAWvB,IAEhCuB,EAAS,sBAAOxB,GAAP,CAA0BC,IAGvCwB,EAAaG,iBAAiB,CAAC5B,kBAAoBwB,K,EAGvDK,uBAAyB,WACrB,IAAMC,EAAiB,EAAKrD,gBAAgB,YAArB,CAAkC,QAAS,CAACE,iBAAiB,IAC5EqB,EAAsB,EAAK7C,MAAMsE,aAAaC,gBAA9C1B,kBACJ+B,EAAmB,GAoBvB,OAlBA,EAAKJ,gBAAgBG,EAAgB,UACrC,EAAKH,gBAAgBG,EAAgB,UAErCA,EAAejD,SAAQ,SAAAoB,GACnB,IAAI+B,EAAYhC,EAAkBP,SAASQ,GAE3C8B,EAAiBhD,KACb,sBACIhC,UAAS,2BAAsBiF,GAAa,YAC5CX,QAAU,WAAQ,EAAKE,wBAAwBtB,IAFnD,UAKK+B,GAAa,qBAAKjF,UAAU,aAC5BkD,IAHMA,OAQZ8B,G,qDArDX,SAAiBE,EAAOC,GACpBD,EAAME,OAAOF,EAAMG,QAAQF,GAAS,K,6BAGxC,SAAiBhE,GACb,OAAQA,GACJ,IAAK,SACD,OAAOC,IAAQC,oBACnB,IAAK,YACD,OAAOD,IAAQ4B,WACnB,QACI,MAAO,IAAIzB,MAAM,yC,oBA6C7B,WACI,OAAOpB,KAAK+D,WACA,oBACA/D,KAAK2E,8B,GA5DqBjB,GCDzByB,E,4MAEjBC,0BAA4B,WAAO,IAAD,EACO,EAAKnF,MAAnCmD,EADuB,EACvBA,aAAcmB,EADS,EACTA,aACjBc,EAAa,GACVpD,EAAkBsC,EAAaC,gBAA/BvC,eAaP,OAXAmB,EAAazB,SAAQ,SAAAd,GACjB,IAAMyE,EAAarD,IAAmBpB,EACtCwE,EAAWxD,KACP,sBAAKhC,UAAS,yBAAoByF,GAAc,YAC3CnB,QAAS,kBAAMI,EAAaG,iBAAiB,CAACzC,eAAgBpB,KADnE,UAIKyE,GAAc,qBAAKzF,UAAU,aAC7BgB,IALL,qBAEwBA,QAMzBwE,G,4CAGX,WACI,OAAOrF,KAAK+D,WACA,kBACA/D,KAAKoF,iC,GAxBuB1B,GCA3B6B,E,4JAEjB,WAAW,IAAD,EACgBvF,KAAKC,MAAtBuF,EADC,EACDA,KAAMC,EADL,EACKA,QACX,OAAO,qBAAK5F,UAAU,WACVsE,QAASsB,EADd,SAGMD,Q,GAPoBrF,IAAMC,WCI1BsF,E,4MACjBC,kBAAoB,SAAAC,GAChB,IAAIC,EAAc,GAYlB,OAVAD,EAAMjE,SAAQ,SAAAmE,GACVD,EAAYhE,KACR,qBAAKhC,UAAU,OAAf,SAGKiG,GAFKA,OAOXD,G,4CAGX,WAAU,IAAD,EACgE7F,KAAKC,MAAMa,OAAzEsC,EADF,EACEA,aAAc2C,EADhB,EACgBA,WAAYC,EAD5B,EAC4BA,SAAUC,EADtC,EACsCA,YAAaC,EADnD,EACmDA,UACjD3B,EAAgBvE,KAAKC,MAArBsE,aAEP,OACA,sBAAK1E,UAAU,UAAf,UACI,cAAC,EAAD,CAAa2F,KAAM,WAAYC,QAAS,WAAOU,OAAOC,KAAKL,MAC3D,cAAC,EAAD,CAAaP,KAAM,YAAaC,QAAS,WAAOU,OAAOC,KAAKH,MAC5D,cAAC,EAAD,CAAaT,KAAM,QAASC,QAAS,WAAOU,OAAOC,KAAKJ,MACxD,qBAAKnG,UAAU,WAAf,SACKG,KAAK2F,kBAAkBC,KAG5B,qBAAK/F,UAAU,UAAf,eAEA,cAAC,EAAD,CAAoB0E,aAAcA,EAAcnB,aAAcA,IAC9D,cAAC,EAAD,CAAkBmB,aAAcA,IAEhC,qBAAK1E,UAAU,UAAf,eAEA,cAAC,EAAD,CAAa2F,KAAM,QAASC,QAAS,WAAOU,OAAOC,KAAKF,MACxD,cAAC,EAAD,CAAaV,KAAM,sB,GAtCMrF,IAAMC,W,uBCH5B,SAASiG,IAAgB,IAC5BC,EAAiBxF,EAAjBwF,aAiBFC,EAAiB,WACnB,IAAIC,EAJGC,KAAKC,MAAMC,aAAaC,QAAQ,WAMvC,OAAIJ,GAGOF,GAxBoB,EA4BMO,mBAASN,KA5Bf,mBA4B5BvE,EA5B4B,KA4BhB8E,EA5BgB,KAkCnC,OAJAC,qBAAU,WAzBiB,IAACjG,IA0BLkB,EAzBnB2E,aAAaK,QAAQ,SAAUP,KAAKQ,UAAUnG,MA0B/C,CAACkB,IAEG,CACHwC,cAhCkB,kBAAMxC,GAiCxBuE,iBACA7B,iBA5BqB,SAACwC,GACtB,IAAIC,EAAiB,2BAAOnF,GAAekF,GAC3CJ,EAAmBK,K,YCJZ,SAASC,IAWpB,IATA,IAAMC,EAAU,SAASC,EAAWC,GAChC,IAAIpF,EAAO,IAAIqF,KAAKF,EAAUG,WAE9B,OADAtF,EAAKuF,QAAQvF,EAAKG,UAAYiF,GACvBpF,GAGLwF,EAAa,IAAIH,KACnBhE,EAAe,GAEVoE,EAAI,EAAGA,EAAI,IAAKA,EACrBpE,EAAa3B,KAAKwF,EAAQM,EAAWC,IAGzC,IAAMrD,EAAe8B,IACfrE,EAAeuC,EAAaC,gBAElC,OACI,sBAAK3E,UAAU,MAAf,UACI,cAAC,EAAD,CAAU2D,aAAcA,EAAcxB,WAAYA,EAAYlB,OAAQA,IACtE,cAAC,EAAD,CAASkB,WAAYA,EAAYlB,OAAQA,EAAQyD,aAAcA,OC/B3E,IAYesD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.27ce4409.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class EntityImage extends React.Component {\n\n    convertURISafe (input) {\n        return escape(input.replace(/[\"']/g, '').split(' ').join('_'));\n    }\n\n    createEntityImage (imageSrc, classNames, entityName) {\n        const classNameString = Array.isArray(classNames) ? classNames.join(' ') : classNames;\n\n        return (<div className={classNameString}>\n            <img src={imageSrc} alt={entityName} />\n        </div>);\n    }\n\n    render() {\n        const {imageSrc, classNames, entityName} = this.props;\n\n        return this.createEntityImage(imageSrc, classNames, entityName);\n    }\n}","import EntityImage from \"./entityImage\";\n\nexport default class MaterialImage extends EntityImage {\n    createMaterialURL (material) {\n        let highMaterialName = material['5starname'] || material['4starname'] ;\n\n        if (!highMaterialName) {\n            highMaterialName = material.name;\n        }\n\n        return `img/items/Item_${this.convertURISafe(highMaterialName)}.png`;\n    }\n\n    render () {\n        const { material } = this.props;\n\n        return this.createEntityImage(\n            this.createMaterialURL(material),\n            'MaterialImage',\n            material.name\n        );\n    }\n}","import React from 'react';\nimport MaterialImage from \"./materialImage\";\nimport genshin from \"genshin-db\";\n\nexport default class calendarTop extends React.Component {\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'weapon':\n                return genshin.weaponmaterialtypes;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    createResetInfo = () => {\n        const { day, config : { resetDay } } = this.props;\n\n        if ( day === resetDay) {\n            return (\n                <div className='Reset'>\n                    Reset Day!\n                </div>\n            );\n        }\n\n    }\n\n    render () {\n        const { day } = this.props;\n\n        const createMaterialImages = (type) => {\n            const queryHandler = this.getQueryHandler(type),\n                materialNames = queryHandler(day, {matchCategories: true});\n            let materialImages = [];\n\n            materialNames.forEach(materialName => {\n                const material = queryHandler(materialName);\n                materialImages.push(<MaterialImage material={material} key={material.name} />)\n            });\n\n            return materialImages;\n        }\n\n        return <div className=\"CalendarTop\">\n            <div className=\"day\">{day}</div>\n            <div className=\"container\">\n                { createMaterialImages('talent') }\n            </div>\n            <div className=\"container\">\n                { createMaterialImages('weapon') }\n            </div>\n            {this.createResetInfo()}\n        </div>;\n    }\n}","import React from 'react';\nimport MaterialImage from \"./materialImage\";\nimport genshin from \"genshin-db\";\nimport EntityImage from \"./entityImage\";\n\nexport default class CalendarBottom extends React.Component {\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'character':\n                return genshin.characters;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    createTransformerImage = () => {\n        const {day, userConfig} = this.props;\n        if (day === userConfig.transformerDay) {\n            return <MaterialImage material={{name: 'Parametric Transformer'}}/>;\n        }\n    }\n\n    createSpiralAbyssImage = () => {\n        const {date, config : { spiralAbyssResetDays }} = this.props,\n            calendarDate = date.getDate();\n\n        if (spiralAbyssResetDays.includes(calendarDate)) {\n            return <EntityImage imageSrc='img/domains/spiral_abyss.png'\n                                classNames='SpiralAbyss'\n                                entityName='SpiralAbyss'\n                    />;\n        }\n    }\n\n    createCharacterImage = () => {\n        const {day, userConfig} = this.props,\n        dayMaterials = this.getQueryHandler('talent')(day, {matchCategories: true}),\n        dayCharacters2D = dayMaterials.map(\n                                material => this.getQueryHandler('character')(material, {matchCategories: true})\n                            ),\n        dayCharacters = [].concat(...dayCharacters2D);\n        let characters = [];\n\n        userConfig.trackedCharacters.forEach(characterName => {\n            if (dayCharacters.includes(characterName)) {\n                let character = this.getQueryHandler('character')(characterName);\n\n                characters.push(\n                    <div className='CharacterIcon' key={`calBotCharIcon${characterName}`}>\n                        <img src={character.images.icon} alt={characterName}/>\n                    </div>\n                    );\n            }\n        });\n\n        return characters;\n    }\n\n    render() {\n        return (\n            <div className=\"CalendarBottom\">\n                {this.createTransformerImage()}\n                {this.createSpiralAbyssImage()}\n                {this.createCharacterImage()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport CalendarTop from \"./calendarTop\";\nimport CalendarBottom from \"./calendarBottom\";\n\nexport default class CalendarItem extends React.Component {\n    render () {\n        const {date, config, userConfig} = this.props;\n        const day = config.calendarDays[date.getDay()]\n\n\n        return (\n            <div className={['CalendarItem', day].join(' ')}>\n                <div className=\"frame\"> </div>\n                <CalendarTop day={day} config={config} />\n                <CalendarBottom day={day} date={date} config={config} userConfig={userConfig} />\n            </div>\n        );\n    };\n}","import React from 'react';\nimport CalendarItem from \"./calendarItem\";\n\nexport default class Calendar extends React.Component {\n    generateCalendarItems = () => {\n        const {displayOrder, config, userConfig} = this.props;\n\n        let calendarItems = [];\n        displayOrder.forEach(date => {\n            calendarItems.push(<CalendarItem date={date} config={config} userConfig={userConfig} key={date.getDay()}/>)\n        });\n        return calendarItems;\n    }\n\n    render () {\n        return (<div className=\"Calendar\">\n            {this.generateCalendarItems()}\n        </div>);\n    }\n}","import React from 'react';\n\nexport default class sidebarMenu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { 'showSubLevel' : true };\n    }\n\n    toggleOpen = () => {\n        this.setState({'showSubLevel' : !this.state.showSubLevel });\n    }\n\n    createMenu = (topLevelText, subLevelItems) => {\n        const subLevelContent = this.state.showSubLevel && (\n            <div className='subLevel'>\n                { subLevelItems }\n            </div>\n        );\n        return (\n            <>\n                <div className='topLevel' onClick={ this.toggleOpen }>\n                    { topLevelText }\n                </div>\n                { subLevelContent }\n            </>\n        );\n    }\n}","import genshin from \"genshin-db\";\nimport sidebarMenu from \"./sidebarMenu\";\n\nexport default class CharacterTracker extends sidebarMenu {\n    removeFromArray (array, remove) {\n        array.splice(array.indexOf(remove), 1);\n    }\n\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'character':\n                return genshin.characters;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    toggleCharacterTracking = characterName => {\n        const stateManager = this.props.stateManager,\n            { trackedCharacters } = stateManager.getUserConfig();\n        let newConfig;\n\n        if (trackedCharacters.includes(characterName)) {\n            newConfig = [...trackedCharacters];\n            this.removeFromArray(newConfig, characterName);\n        } else {\n            newConfig = [...trackedCharacters, characterName];\n        }\n\n        stateManager.updateUserConfig({trackedCharacters : newConfig});\n    }\n\n    generateCharacterItems = () => {\n        const characterNames = this.getQueryHandler('character')('names', {matchCategories: true});\n        const { trackedCharacters } = this.props.stateManager.getUserConfig();\n        let outputCharacters = [];\n\n        this.removeFromArray(characterNames, 'Aether');\n        this.removeFromArray(characterNames, 'Lumine');\n\n        characterNames.forEach(characterName => {\n            let isTracked = trackedCharacters.includes(characterName);\n\n            outputCharacters.push(\n                <div\n                    className={`characterTracker ${isTracked && 'selected'}`}\n                    onClick={ () => { this.toggleCharacterTracking(characterName); } }\n                    key = {characterName}\n                >\n                    {isTracked && <div className='primogem'/> }\n                    {characterName}\n                </div>\n            );\n        });\n\n        return outputCharacters;\n    }\n\n    render () {\n        return this.createMenu(\n                    'Character Tracker',\n                    this.generateCharacterItems()\n                );\n    }\n}","import sidebarMenu from \"./sidebarMenu\";\n\nexport default class TransformerChanger extends sidebarMenu {\n\n    createTransformerDayItems = () => {\n        const {calendarDays, stateManager} = this.props;\n        let outputDays = [];\n        const {transformerDay} = stateManager.getUserConfig();\n\n        calendarDays.forEach(day => {\n            const isSelected = transformerDay === day;\n            outputDays.push(\n                <div className={`transformerDay ${isSelected && 'selected'}`}\n                     onClick={() => stateManager.updateUserConfig({transformerDay: day})}\n                     key={`transformer${day}`}\n                >\n                    {isSelected && <div className='primogem'/> }\n                    {day}\n                </div>)\n        });\n        return outputDays;\n    }\n\n    render() {\n        return this.createMenu(\n                    'Set Transformer',\n                    this.createTransformerDayItems()\n                );\n    }\n}","import React from 'react';\n\nexport default class SidebarItem extends React.Component {\n\n    render () {\n        let {text, handler} = this.props;\n        return <div className='topLevel'\n                    onClick={handler}\n                >\n                    {text}\n                </div>;\n    }\n}","import React from 'react';\nimport codes from \"../data/codes.json\";\nimport CharacterTracker from \"./characterTracker\";\nimport TransformerChanger from \"./transformerChanger\";\nimport SidebarItem from \"./sidebarItem\";\n\nexport default class Sidebar extends React.Component {\n    generateCodeItems = codes => {\n        let outputCodes = [];\n\n        codes.forEach(code => {\n            outputCodes.push(\n                <div className='code'\n                     key={code}\n                >\n                    {code}\n                </div>\n            );\n        })\n\n        return outputCodes;\n    }\n\n    render() {\n        const {calendarDays, checkInURL, codesURL, webEventURL, buildsURL} = this.props.config;\n        const {stateManager} = this.props;\n\n        return (\n        <div className=\"Sidebar\">\n            <SidebarItem text={'Check In'} handler={() => {window.open(checkInURL);}} />\n            <SidebarItem text={'Web Event'} handler={() => {window.open(webEventURL);}} />\n            <SidebarItem text={'Codes'} handler={() => {window.open(codesURL);}} />\n            <div className='subLevel'>\n                {this.generateCodeItems(codes)}\n            </div>\n\n            <div className='divider'> </div>\n\n            <TransformerChanger stateManager={stateManager} calendarDays={calendarDays} />\n            <CharacterTracker stateManager={stateManager} />\n\n            <div className='divider'> </div>\n\n            <SidebarItem text={'Build'} handler={() => {window.open(buildsURL);}}/>\n            <SidebarItem text={'Calculator'} />\n        </div>\n        );\n    }\n}","import { useState, useEffect } from 'react';\nimport config from '../data/config.json';\n\nexport default function StateManager() {\n    const { defaultState } = config;\n\n    const getUserConfig = () => userConfig;\n\n    const setSavedUserConfig = (config) => {\n        localStorage.setItem('config', JSON.stringify(config));\n    }\n\n    const updateUserConfig = (newValue) => {\n        let updatedUserConfig = {...userConfig, ...newValue};\n        setUserConfigState(updatedUserConfig);\n    }\n\n    const getSavedUserConfig = () => {\n        return JSON.parse(localStorage.getItem('config'));\n    }\n\n    const loadUserConfig = () => {\n        let storedUserConfig = getSavedUserConfig();\n\n        if (storedUserConfig) {\n            return storedUserConfig;\n        } else {\n            return defaultState;\n        }\n    }\n\n    const [userConfig, setUserConfigState] = useState(loadUserConfig());\n\n    useEffect(() => {\n        setSavedUserConfig(userConfig);\n    }, [userConfig]);\n\n    return {\n        getUserConfig,\n        loadUserConfig,\n        updateUserConfig\n    }\n}","import React from 'react';\nimport Calendar from \"./lib/components/calendar\";\nimport Sidebar from \"./lib/components/sidebar\";\nimport StateManager from \"./lib/components/stateManager\";\nimport config from './lib/data/config.json';\n\nimport './lib/css/App.css';\nimport './lib/css/days.css';\n\n\nexport default function App () {\n\n    const addDays = function(startDate, days) {\n        let date = new Date(startDate.valueOf());\n        date.setDate(date.getDate() + days);\n        return date;\n    }\n\n    const currentDay = new Date();\n    let displayOrder = [];\n\n    for (let i = 0; i < 7; ++i) {\n        displayOrder.push(addDays(currentDay,i));\n    }\n\n    const stateManager = StateManager(),\n          userConfig   = stateManager.getUserConfig();\n\n    return (\n        <div className=\"App\">\n            <Calendar displayOrder={displayOrder} userConfig={userConfig} config={config} />\n            <Sidebar userConfig={userConfig} config={config} stateManager={stateManager}/>\n        </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}