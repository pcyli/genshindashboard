{"version":3,"sources":["lib/components/materialImage.js","lib/components/calendarTop.js","lib/components/calendarBottom.js","lib/components/calendarItem.js","lib/components/calendar.js","lib/components/sidebarMenu.js","lib/components/characterTracker.js","lib/components/transformerChanger.js","lib/components/sidebarItem.js","lib/components/sidebar.js","lib/components/stateManager.js","App.js","reportWebVitals.js","index.js"],"names":["MaterialImage","material","highMaterialName","name","this","convertURISafe","input","escape","replace","split","join","props","className","src","createMaterialImage","alt","React","Component","calendarTop","type","genshin","talentmaterialtypes","weaponmaterialtypes","Error","day","createMaterialImages","queryHandler","getQueryHandler","materialNames","matchCategories","materialImages","forEach","materialName","push","CalendarBottom","createTransformerImage","config","transformerDay","createCharacterImage","dayCharacters2D","map","dayCharacters","concat","characters","trackedCharacters","characterName","includes","character","images","icon","CalendarItem","userConfig","Calendar","generateCalendarItems","days","calendarItems","displayOrder","sidebarMenu","toggleOpen","setState","state","showSubLevel","createMenu","topLevelText","subLevelItems","subLevelContent","onClick","CharacterTracker","toggleCharacterTracking","newConfig","stateManager","getUserConfig","removeFromArray","updateUserConfig","generateCharacterItems","characterNames","outputCharacters","isTracked","array","remove","splice","indexOf","TransformerChanger","createTransformerDayItems","calendarDays","outputDays","isSelected","SidebarItem","text","handler","Sidebar","generateCodeItems","codes","outputCodes","code","checkInURL","codesURL","webEventURL","buildsURL","window","open","StateManager","defaultState","loadUserConfig","storedUserConfig","JSON","parse","localStorage","getItem","useState","setUserConfigState","useEffect","setItem","stringify","newValue","updatedUserConfig","App","currentDay","Date","getDay","slice","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6b86ff5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class MaterialImage extends React.Component {\n    createMaterialImage (material) {\n        let highMaterialName = material['5starname'] || material['4starname'] ;\n\n        if (!highMaterialName) {\n            highMaterialName = material.name;\n        }\n\n        return `img/items/Item_${this.convertURISafe(highMaterialName)}.png`;\n    }\n    convertURISafe (input) {\n        return escape(input.replace(/[\"']/g, '').split(' ').join('_'));\n    }\n\n    render () {\n        const { material } = this.props;\n\n        return <div className='MaterialImage'>\n            <img src={this.createMaterialImage(material)} alt={material.name} />\n        </div>\n    }\n}","import React from 'react';\nimport MaterialImage from \"./materialImage\";\nimport genshin from \"genshin-db\";\n\nexport default class calendarTop extends React.Component {\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'weapon':\n                return genshin.weaponmaterialtypes;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    render () {\n        const { day } = this.props;\n\n        const createMaterialImages = (type) => {\n            const queryHandler = this.getQueryHandler(type),\n                materialNames = queryHandler(day, {matchCategories: true});\n            let materialImages = [];\n\n            materialNames.forEach(materialName => {\n                const material = queryHandler(materialName);\n                materialImages.push(<MaterialImage material={material} key={material.name} />)\n            });\n\n            return materialImages;\n        }\n\n        return <div className={[\"CalendarTop\", day].join(' ')}>\n            <div className=\"day\">{day}</div>\n            <div className=\"container\">\n                { createMaterialImages('talent') }\n            </div>\n            <div className=\"container\">\n                { createMaterialImages('weapon') }\n            </div>\n        </div>;\n    }\n}","import React from 'react';\nimport MaterialImage from \"./materialImage\";\nimport genshin from \"genshin-db\";\n\nexport default class CalendarBottom extends React.Component {\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'character':\n                return genshin.characters;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    createTransformerImage = () => {\n        const {day, config} = this.props;\n        if (day === config.transformerDay) {\n            return <MaterialImage material={{name: 'Parametric Transformer'}} />;\n        }\n    }\n\n    createCharacterImage = () => {\n        const {day, config} = this.props,\n        dayMaterials = this.getQueryHandler('talent')(day, {matchCategories: true}),\n        dayCharacters2D = dayMaterials.map(\n                                material => this.getQueryHandler('character')(material, {matchCategories: true})\n                            ),\n        dayCharacters = [].concat(...dayCharacters2D);\n        let characters = [];\n\n        config.trackedCharacters.forEach(characterName => {\n            if (dayCharacters.includes(characterName)) {\n                let character = this.getQueryHandler('character')(characterName);\n\n                characters.push(\n                    <div className='CharacterIcon' key={`calBotCharIcon${characterName}`}>\n                        <img src={character.images.icon} alt={characterName}/>\n                    </div>\n                    );\n            }\n        });\n\n        return characters;\n    }\n\n    render() {\n        return (\n            <div className=\"CalendarBottom\">\n                {this.createTransformerImage()}\n                {this.createCharacterImage()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport CalendarTop from \"./calendarTop\";\nimport CalendarBottom from \"./calendarBottom\";\n\nexport default class CalendarItem extends React.Component {\n    render () {\n        const {day, userConfig} = this.props;\n\n        return (\n            <div className=\"CalendarItem\">\n                <div className=\"frame\"> </div>\n                <CalendarTop day={day} />\n                <CalendarBottom day={day} config={userConfig} />\n            </div>\n        );\n    };\n}","import React from 'react';\nimport CalendarItem from \"./calendarItem\";\n\nexport default class Calendar extends React.Component {\n    generateCalendarItems = (days, userConfig) => {\n        let calendarItems = [];\n        days.forEach(day => {\n            calendarItems.push(<CalendarItem day={day} userConfig={userConfig} key={day}/>)\n        });\n        return calendarItems;\n    }\n\n    render () {\n        const {displayOrder, userConfig} = this.props;\n\n        return (<div className=\"Calendar\">\n            {this.generateCalendarItems(displayOrder, userConfig)}\n        </div>);\n    }\n}","import React from 'react';\n\nexport default class sidebarMenu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { 'showSubLevel' : true };\n    }\n\n    toggleOpen = () => {\n        this.setState({'showSubLevel' : !this.state.showSubLevel });\n    }\n\n    createMenu = (topLevelText, subLevelItems) => {\n        const subLevelContent = this.state.showSubLevel && (\n            <div className='subLevel'>\n                { subLevelItems }\n            </div>\n        );\n        return (\n            <>\n                <div className='topLevel' onClick={ this.toggleOpen }>\n                    { topLevelText }\n                </div>\n                { subLevelContent }\n            </>\n        );\n    }\n}","import genshin from \"genshin-db\";\nimport sidebarMenu from \"./sidebarMenu\";\n\nexport default class CharacterTracker extends sidebarMenu {\n    removeFromArray (array, remove) {\n        array.splice(array.indexOf(remove), 1);\n    }\n\n    getQueryHandler (type) {\n        switch (type) {\n            case 'talent':\n                return genshin.talentmaterialtypes;\n            case 'character':\n                return genshin.characters;\n            default:\n                throw (new Error('getQueryHandler: No type specified'));\n        }\n    }\n\n    toggleCharacterTracking = characterName => {\n        const stateManager = this.props.stateManager,\n            { trackedCharacters } = stateManager.getUserConfig();\n        let newConfig;\n\n        if (trackedCharacters.includes(characterName)) {\n            newConfig = [...trackedCharacters];\n            this.removeFromArray(newConfig, characterName);\n        } else {\n            newConfig = [...trackedCharacters, characterName];\n        }\n\n        stateManager.updateUserConfig({trackedCharacters : newConfig});\n    }\n\n    generateCharacterItems = () => {\n        const characterNames = this.getQueryHandler('character')('names', {matchCategories: true});\n        const { trackedCharacters } = this.props.stateManager.getUserConfig();\n        let outputCharacters = [];\n\n        this.removeFromArray(characterNames, 'Aether');\n        this.removeFromArray(characterNames, 'Lumine');\n\n        characterNames.forEach(characterName => {\n            let isTracked = trackedCharacters.includes(characterName);\n\n            outputCharacters.push(\n                <div\n                    className={`characterTracker ${isTracked && 'selected'}`}\n                    onClick={ () => { this.toggleCharacterTracking(characterName); } }\n                    key = {characterName}\n                >\n                    {isTracked && <div className='primogem'/> }\n                    {characterName}\n                </div>\n            );\n        });\n\n        return outputCharacters;\n    }\n\n    render () {\n        return this.createMenu(\n                    'Character Tracker',\n                    this.generateCharacterItems()\n                );\n    }\n}","import sidebarMenu from \"./sidebarMenu\";\n\nexport default class TransformerChanger extends sidebarMenu {\n\n    createTransformerDayItems = () => {\n        const {calendarDays, stateManager} = this.props;\n        let outputDays = [];\n        const {transformerDay} = stateManager.getUserConfig();\n\n        calendarDays.forEach(day => {\n            const isSelected = transformerDay === day;\n            outputDays.push(\n                <div className={`transformerDay ${isSelected && 'selected'}`}\n                     onClick={() => stateManager.updateUserConfig({transformerDay: day})}\n                     key={`transformer${day}`}\n                >\n                    {isSelected && <div className='primogem'/> }\n                    {day}\n                </div>)\n        });\n        return outputDays;\n    }\n\n    render() {\n        return this.createMenu(\n                    'Set Transformer',\n                    this.createTransformerDayItems()\n                );\n    }\n}","import React from 'react';\n\nexport default class SidebarItem extends React.Component {\n\n    render () {\n        let {text, handler} = this.props;\n        return <div className='topLevel'\n                    onClick={handler}\n                >\n                    {text}\n                </div>;\n    }\n}","import React from 'react';\nimport codes from \"../data/codes.json\";\nimport CharacterTracker from \"./characterTracker\";\nimport TransformerChanger from \"./transformerChanger\";\nimport SidebarItem from \"./sidebarItem\";\n\nexport default class Sidebar extends React.Component {\n    generateCodeItems = codes => {\n        let outputCodes = [];\n\n        codes.forEach(code => {\n            outputCodes.push(\n                <div className='code'\n                     key={code}\n                >\n                    {code}\n                </div>\n            );\n        })\n\n        return outputCodes;\n    }\n\n    render() {\n        const {calendarDays, checkInURL, codesURL, webEventURL, buildsURL} = this.props.config;\n        const {stateManager} = this.props;\n\n        return (\n        <div className=\"Sidebar\">\n            <SidebarItem text={'Check In'} handler={() => {window.open(checkInURL);}} />\n            <SidebarItem text={'Web Event'} handler={() => {window.open(webEventURL);}} />\n            <SidebarItem text={'Codes'} handler={() => {window.open(codesURL);}} />\n            <div className='subLevel'>\n                {this.generateCodeItems(codes)}\n            </div>\n\n            <div className='divider'> </div>\n\n            <TransformerChanger stateManager={stateManager} calendarDays={calendarDays} />\n            <CharacterTracker stateManager={stateManager} />\n\n            <div className='divider'> </div>\n\n            <SidebarItem text={'Build'} handler={() => {window.open(buildsURL);}}/>\n            <SidebarItem text={'Calculator'} />\n        </div>\n        );\n    }\n}","import { useState, useEffect } from 'react';\nimport config from '../data/config.json';\n\nexport default function StateManager() {\n    const { defaultState } = config;\n\n    const getUserConfig = () => userConfig;\n\n    const setSavedUserConfig = (config) => {\n        localStorage.setItem('config', JSON.stringify(config));\n    }\n\n    const updateUserConfig = (newValue) => {\n        let updatedUserConfig = {...userConfig, ...newValue};\n        setUserConfigState(updatedUserConfig);\n    }\n\n    const getSavedUserConfig = () => {\n        return JSON.parse(localStorage.getItem('config'));\n    }\n\n    const loadUserConfig = () => {\n        let storedUserConfig = getSavedUserConfig();\n\n        if (storedUserConfig) {\n            return storedUserConfig;\n        } else {\n            return defaultState;\n        }\n    }\n\n    const [userConfig, setUserConfigState] = useState(loadUserConfig());\n\n    useEffect(() => {\n        setSavedUserConfig(userConfig);\n    }, [userConfig]);\n\n    return {\n        getUserConfig,\n        loadUserConfig,\n        updateUserConfig\n    }\n}","import React from 'react';\nimport Calendar from \"./lib/components/calendar\";\nimport Sidebar from \"./lib/components/sidebar\";\nimport StateManager from \"./lib/components/stateManager\";\nimport config from './lib/data/config.json';\n\nimport './lib/css/App.css';\nimport './lib/css/days.css';\n\n\nexport default function App () {\n    let {calendarDays} = config,\n        currentDay = (new Date()).getDay(),\n        displayOrder = calendarDays.slice(currentDay, calendarDays.length).concat(calendarDays.slice(0, currentDay));\n\n    let stateManager = StateManager();\n\n    let userConfig = stateManager.getUserConfig();\n\n    return (\n        <div className=\"App\">\n            <Calendar displayOrder={displayOrder} userConfig={userConfig} />\n            <Sidebar userConfig={userConfig} config={config} stateManager={stateManager}/>\n        </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}